openapi: 3.0.1
info:
  title: Camera system backend API
  description: API documentation for the backend REST API
  version: "1.0.0"
servers:
  - url: http://localhost:8000
    description: Local server
paths:
  /alive:
    get:
      tags:
        - Utilities
      summary: Alive ping for checking server health
      responses:
        "200":
          description: Server is alive
          content:
            application/json:
              schema:
                type: string
                example: "Alive!"
  /tapo-320ws/info/{name}:
    get:
      tags:
        - Tapo320WS
      summary: Retrieve camera info
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Camera information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  device_info:
                    type: object
                    properties:
                      basic_info:
                        type: object
                        properties:
                          device_type: { type: string }
                          device_info: { type: string }
                          features: { type: number }
                          barcode: { type: string }
                          device_model: { type: string }
                          sw_version: { type: string }
                          device_name: { type: string }
                          hw_version: { type: string }
                          device_alias: { type: string }
                          mobile_access: { type: number }
                          mac: { type: string }
                          dev_id: { type: string }
                          hw_id: { type: string }
                          oem_id: { type: string }
                          hw_desc: { type: string }
                          manufacturer_name: { type: string }
                          region: { type: string }
                          ffs: { type: boolean }
                          is_cal: { type: boolean }
                          avatar: { type: string }
                          has_set_location_info: { type: number }
                          longitude: { type: number }
                          latitude: { type: number }
  /tapo-320ws/light/{name}:
    get:
      tags:
        - Tapo320WS
      summary: Get light status
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Light status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: number }
                  rest_time: { type: number }
    post:
      tags:
        - Tapo320WS
      summary: Change light status
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Light status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: number }
                  rest_time: { type: number }
  /tapo-320ws/night/{name}:
    get:
      tags:
        - Tapo320WS
      summary: Get night-vision status
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Night-vision status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: number }
    post:
      tags:
        - Tapo320WS
      summary: Change night-vision status
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Night-vision status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: number }
  /tapo-320ws/stream/{name}:
    get:
      tags:
        - Tapo320WS
      summary: Get stream WebSocket URL
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Stream URL retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  streamUrl:
                    type: string
                    example: "ws://"
  /tapo-320ws/recordings/{name}:
    get:
      tags:
        - Tapo320WS
      summary: Get recordings
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the camera
          schema:
            type: string
      responses:
        "200":
          description: Recordings retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    startTime: { type: string, example: "14:47:43" }
                    endTime: { type: string, example: "14:48:50" }
                    vedio_type: { type: number }
                    duration_seconds: { type: number }
                    date: { type: string, example: "2024-12-26" }
                    id: { type: string }
                    downloaded: { type: boolean }


  /camera:
    get:
      tags:
        - Camera
      summary: Get all cameras
      description: Retrieve a list of all cameras from the database.
      responses:
        '200':
          description: A list of cameras.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      description: Name of the camera.
                    model:
                      type: string
                      description: Model of the camera.
                    ip:
                      type: string
                      description: IP address of the camera.
                    username:
                      type: string
                      description: Username for the camera's management interface.
                    password:
                      type: string
                      description: Password for the camera's management interface.
                    camera_username:
                      type: string
                      description: Username for accessing the camera's stream.
                    camera_password:
                      type: string
                      description: Password for accessing the camera's stream.
        '500':
          description: Error retrieving cameras.

    post:
      tags:
        - Camera
      summary: Add or update a camera
      description: Add a new camera to the database or update an existing camera's details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Camera'
      responses:
        '200':
          description: Camera created or updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        '500':
          description: Error adding or updating camera.

    delete:
      tags:
        - Camera
      summary: Delete a camera
      description: Delete a camera from the database by its name.
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
          description: Name of the camera to delete.
      responses:
        '200':
          description: Camera deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
        '404':
          description: Camera not found.
        '500':
          description: Error deleting camera.

  /camera/{name}:
    get:
      tags:
        - Camera
      summary: Get camera by name
      description: Retrieve details of a camera by its name.
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: Name of the camera.
      responses:
        '200':
          description: Camera details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  model:
                    type: string
                  ip:
                    type: string
                  username:
                    type: string
                  password:
                    type: string
                  camera_username:
                    type: string
                  camera_password:
                    type: string
        '404':
          description: Camera not found.
        '500':
          description: Error retrieving camera.

components:
  schemas:
    Camera:
      type: object
      properties:
        name:
          type: string
          description: Name of the camera.
        model:
          type: string
          description: Model of the camera.
        ip:
          type: string
          description: IP address of the camera.
        username:
          type: string
          description: Username for the camera's management interface.
        password:
          type: string
          description: Password for the camera's management interface.
        camera_username:
          type: string
          description: Username for accessing the camera's stream.
        camera_password:
          type: string
          description: Password for accessing the camera's stream.
